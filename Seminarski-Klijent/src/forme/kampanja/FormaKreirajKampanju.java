/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package forme.kampanja;

import domen.Kampanja;
import domen.Partner;
import domen.Zadatak;
import domen.Zaposleni;
import forme.modeli.tabela.ModelTabeleZadatak;
import forme.zadatak.FormaIzmeniZadatak;
import forme.zadatak.FormaKreirajZadatak;
import forme.zadatak.FormaPrikaziZadatak;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import komunikacija.Odgovor;
import komunikacija.VrstaOdgovora;
import konstante.Konstante;
import kontroler.KontrolerKIKampanja;

/**
 *
 * @author Danilo
 */
public class FormaKreirajKampanju extends javax.swing.JFrame implements forme.FormaInterfejs{
    Kampanja kampanja;

    /**
     * Creates new form FormaKreirajKampanju
     */
    public FormaKreirajKampanju() {
        initComponents();
        setLocationRelativeTo(null);
        postaviModelTabele();
        popuniPartnere();
        popuniZaposlene();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblGlavniOdgovorni = new javax.swing.JLabel();
        lblParnter = new javax.swing.JLabel();
        lblNaziv = new javax.swing.JLabel();
        txtNaziv = new javax.swing.JTextField();
        txtDatumPocetka = new javax.swing.JTextField();
        txtDatumZavrsetka = new javax.swing.JTextField();
        cmbPartner = new javax.swing.JComboBox();
        lblDatumPocetka = new javax.swing.JLabel();
        cmbGlavniOdgovorni = new javax.swing.JComboBox();
        lblDatumZavrsetka = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblZadaci = new javax.swing.JTable();
        btnDodajZadatak = new javax.swing.JButton();
        btnObrisiZadatak = new javax.swing.JButton();
        btnIzmeniZadatak = new javax.swing.JButton();
        btnPrikaziZadatak = new javax.swing.JButton();
        btnSacuvajKampanju = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Kreiraj kampanju");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Podaci o kampanji"));

        lblGlavniOdgovorni.setText("Glavni odgvorni:");

        lblParnter.setText("Za partnera:");

        lblNaziv.setText("Naziv:");

        cmbPartner.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblDatumPocetka.setText("Datum početka:");

        cmbGlavniOdgovorni.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblDatumZavrsetka.setText("Datum završetka:");

        tblZadaci.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblZadaci);

        btnDodajZadatak.setText("Dodaj zadatak");
        btnDodajZadatak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajZadatakActionPerformed(evt);
            }
        });

        btnObrisiZadatak.setText("Obriši zadatak");
        btnObrisiZadatak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiZadatakActionPerformed(evt);
            }
        });

        btnIzmeniZadatak.setText("Izmeni zadatak");
        btnIzmeniZadatak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniZadatakActionPerformed(evt);
            }
        });

        btnPrikaziZadatak.setText("Prikaži zadatak");
        btnPrikaziZadatak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrikaziZadatakActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblDatumZavrsetka, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblGlavniOdgovorni, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDatumPocetka, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblParnter, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbPartner, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDatumPocetka, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDatumZavrsetka, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbGlavniOdgovorni, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnPrikaziZadatak)
                        .addGap(18, 18, 18)
                        .addComponent(btnDodajZadatak)
                        .addGap(18, 18, 18)
                        .addComponent(btnObrisiZadatak)
                        .addGap(18, 18, 18)
                        .addComponent(btnIzmeniZadatak))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblParnter, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbPartner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNaziv)
                            .addComponent(txtNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDatumPocetka, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDatumPocetka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDatumZavrsetka, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDatumZavrsetka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblGlavniOdgovorni, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbGlavniOdgovorni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDodajZadatak)
                    .addComponent(btnObrisiZadatak)
                    .addComponent(btnIzmeniZadatak)
                    .addComponent(btnPrikaziZadatak))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        btnSacuvajKampanju.setText("Sačuvaj kampanju");
        btnSacuvajKampanju.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajKampanjuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(390, 390, 390)
                .addComponent(btnSacuvajKampanju, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSacuvajKampanju, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDodajZadatakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajZadatakActionPerformed
        ModelTabeleZadatak mtz = (ModelTabeleZadatak) tblZadaci.getModel();
        FormaKreirajZadatak fzk = new FormaKreirajZadatak(this, true, mtz);
        fzk.setVisible(true);
    }//GEN-LAST:event_btnDodajZadatakActionPerformed

    private void btnPrikaziZadatakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrikaziZadatakActionPerformed
        {
            ModelTabeleZadatak mtz = (ModelTabeleZadatak) tblZadaci.getModel();
            int izabraniRed = tblZadaci.getSelectedRow();
            if (izabraniRed != -1) {
                Zadatak zadatakZaPrikaz = mtz.vratiZadatak(izabraniRed);
                FormaPrikaziZadatak fpz = new FormaPrikaziZadatak(this, rootPaneCheckingEnabled, zadatakZaPrikaz);
                fpz.setVisible(true);

            } else {
                JOptionPane.showMessageDialog(this, "Morate izabrati zadatak iz tabele.", Konstante.PORUKA_NEUSPESNO, JOptionPane.ERROR_MESSAGE);
        }        }    }//GEN-LAST:event_btnPrikaziZadatakActionPerformed

    private void btnObrisiZadatakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiZadatakActionPerformed
        ModelTabeleZadatak mtz = (ModelTabeleZadatak) tblZadaci.getModel();
        int izabraniRed = tblZadaci.getSelectedRow();
        if (izabraniRed != -1) {
            mtz.obrisi(izabraniRed);
        } else {
            JOptionPane.showMessageDialog(this, "Morate izabrati zadatak iz tabele.", Konstante.PORUKA_NEUSPESNO, JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnObrisiZadatakActionPerformed

    private void btnIzmeniZadatakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniZadatakActionPerformed
        ModelTabeleZadatak mtz = (ModelTabeleZadatak) tblZadaci.getModel();
        int izabraniRed = tblZadaci.getSelectedRow();
        if (izabraniRed != -1) {
            Zadatak zadatakZaIzmenu = mtz.vratiZadatak(izabraniRed);
            izmeniZadatak(zadatakZaIzmenu, mtz);
        } else {
            JOptionPane.showMessageDialog(this, "Morate izabrati zadatak iz tabele.", Konstante.PORUKA_NEUSPESNO, JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnIzmeniZadatakActionPerformed

    private void btnSacuvajKampanjuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajKampanjuActionPerformed
        if (validirajUnos()) {
            Odgovor odgovor = KontrolerKIKampanja.getInstance().kreirajKampanju(kampanja);
            prikaziObavestenje(odgovor, true, this);
        }
    }//GEN-LAST:event_btnSacuvajKampanjuActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodajZadatak;
    private javax.swing.JButton btnIzmeniZadatak;
    private javax.swing.JButton btnObrisiZadatak;
    private javax.swing.JButton btnPrikaziZadatak;
    private javax.swing.JButton btnSacuvajKampanju;
    private javax.swing.JComboBox cmbGlavniOdgovorni;
    private javax.swing.JComboBox cmbPartner;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDatumPocetka;
    private javax.swing.JLabel lblDatumZavrsetka;
    private javax.swing.JLabel lblGlavniOdgovorni;
    private javax.swing.JLabel lblNaziv;
    private javax.swing.JLabel lblParnter;
    private javax.swing.JTable tblZadaci;
    private javax.swing.JTextField txtDatumPocetka;
    private javax.swing.JTextField txtDatumZavrsetka;
    private javax.swing.JTextField txtNaziv;
    // End of variables declaration//GEN-END:variables

    private void popuniPartnere() {
        cmbPartner.removeAllItems();
        ArrayList<Partner> listaSvihPartnera = kontroler.KontrolerKIPartner.getInstance().vratiSvePartnere();
        if (listaSvihPartnera != null && !listaSvihPartnera.isEmpty()) {
            for (Partner partner : listaSvihPartnera) {
                cmbPartner.addItem(partner);
            }
            cmbPartner.setSelectedItem(null);
        } else {
            JOptionPane.showMessageDialog(this, "Sistem ne može ucita partnere", Konstante.PORUKA_NEUSPESNO, JOptionPane.ERROR_MESSAGE);
            this.dispose();
        }
    }

    private void popuniZaposlene() {
        cmbGlavniOdgovorni.removeAllItems();
        ArrayList<Zaposleni> listaSvihZaposlnih = kontroler.KontorlerKIZaposleni.getInstance().vratiSveZaposlene();
        if (listaSvihZaposlnih != null) {
            for (Zaposleni zaposleni : listaSvihZaposlnih) {
                cmbGlavniOdgovorni.addItem(zaposleni);
            }
            cmbGlavniOdgovorni.setSelectedItem(null);
        } else {
            JOptionPane.showMessageDialog(this, "Sistem ne može ucita zaposlene", Konstante.PORUKA_NEUSPESNO, JOptionPane.ERROR_MESSAGE);
            this.dispose();
        }
    }

    private void postaviModelTabele() {
        ModelTabeleZadatak mtz = new ModelTabeleZadatak();
        tblZadaci.setModel(mtz);
    }

    public void dodajNoviZadatak(Zadatak noviZadatak) {
        ModelTabeleZadatak mtz = (ModelTabeleZadatak) tblZadaci.getModel();
        mtz.dodaj(noviZadatak);
    }

    public void izmeniZadatak(Zadatak zadatakZaIzmenu, ModelTabeleZadatak mtz) {
        int izabraniRed = tblZadaci.getSelectedRow();
        FormaIzmeniZadatak fiz = new FormaIzmeniZadatak(this, true, zadatakZaIzmenu, mtz, izabraniRed);
        fiz.setVisible(true);
    }

    private boolean validirajUnos() {
        Partner partner = (Partner) cmbPartner.getSelectedItem();
        if (partner == null) {
            JOptionPane.showMessageDialog(this, "Morate izabrati partnera za koga se izrađuje kampanja.", Konstante.PORUKA_NEUSPESNO, JOptionPane.ERROR_MESSAGE);
            return false;
        }
        String naziv = txtNaziv.getText().trim();
        if (naziv.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Polje naziv ne sme biti prazno.", Konstante.PORUKA_NEUSPESNO, JOptionPane.ERROR_MESSAGE);
            return false;
        }

        SimpleDateFormat sdf = Konstante.SIMPLE_DATE_FORMAT;

        Date datumPocetka = null;
        Date datumZavrsetka = null;

        try {
            datumPocetka = sdf.parse(txtDatumPocetka.getText());
            datumZavrsetka = sdf.parse(txtDatumZavrsetka.getText());
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this, Konstante.PORUKA_GRESKA_FORMAT_DATUMA, Konstante.PORUKA_NEUSPESNO, JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (datumPocetka.after(datumZavrsetka)) {
            JOptionPane.showMessageDialog(this, "Datum završetka mora biti nakon datuma početka.", Konstante.PORUKA_NEUSPESNO, JOptionPane.ERROR_MESSAGE);
            return false;
        }

        Zaposleni odgovorniZaposleni = (Zaposleni) cmbGlavniOdgovorni.getSelectedItem();
        if (odgovorniZaposleni == null) {
            JOptionPane.showMessageDialog(this, "Morate izabrati glavnog odgovornog zaposlenog za kampanju.", Konstante.PORUKA_NEUSPESNO, JOptionPane.ERROR_MESSAGE);
            return false;
        }

        ModelTabeleZadatak mtz = (ModelTabeleZadatak) tblZadaci.getModel();
        ArrayList<Zadatak> listaZadataka = mtz.getLista();
        if (listaZadataka.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Kampanja mora imati makar jedan zadatak.", Konstante.PORUKA_NEUSPESNO, JOptionPane.ERROR_MESSAGE);
            return false;
        }

        kampanja = new Kampanja();
        kampanja.setPartner(partner);
        kampanja.setNaziv(naziv);
        kampanja.setDatumPocetka(datumPocetka);
        kampanja.setDatumZavrsetka(datumZavrsetka);
        kampanja.setOdgovorniZaposleni(odgovorniZaposleni);
        kampanja.setZadaci(listaZadataka);
        return true;
    }
}
