/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package forme.zadatak;

import domen.StatusZadatka;
import domen.Zadatak;
import forme.kampanja.FormaKreirajKampanju;
import forme.modeli.tabela.ModelTabeleZadatak;
import java.awt.Frame;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import konstante.Konstante;

/**
 *
 * @author Danilo
 */
public class FormaIzmeniZadatak extends javax.swing.JDialog {

    Zadatak izabraniZadatak;
    ModelTabeleZadatak mtz;
    int izabraniRed;

    /**
     * Creates new form FormaKreirajZadatak
     */
    public FormaIzmeniZadatak(Frame parent, boolean modal, Zadatak izabraniZadatak, ModelTabeleZadatak mtz, int izabraniRed) {
        super(parent, modal);
        initComponents();
        this.mtz = mtz;
        this.izabraniZadatak = izabraniZadatak;
        this.izabraniRed = izabraniRed;
        popuniStatuseZadatka();
        postaviVrednostiZadatka();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnIzmeniZadatak = new javax.swing.JButton();
        txtNaziv = new javax.swing.JTextField();
        txtDatumZavrsetka = new javax.swing.JTextField();
        cmbStatusZadatka = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtOpis = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Izmeni zadatak");

        jLabel1.setText("Naziv:");

        jLabel2.setText("Opis:");

        jLabel3.setText("Datum završetka:");

        jLabel4.setText("Status zadatka:");

        btnIzmeniZadatak.setText("Izmeni zadatak");
        btnIzmeniZadatak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniZadatakActionPerformed(evt);
            }
        });

        cmbStatusZadatka.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        txtOpis.setColumns(20);
        txtOpis.setRows(5);
        jScrollPane1.setViewportView(txtOpis);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDatumZavrsetka)
                                    .addComponent(txtNaziv)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 317, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(cmbStatusZadatka, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnIzmeniZadatak, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDatumZavrsetka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cmbStatusZadatka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnIzmeniZadatak)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIzmeniZadatakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniZadatakActionPerformed
        Zadatak izmenjeniZadatak = new Zadatak();
        if (validirajUnos(izmenjeniZadatak)) {
            mtz.izmeniIzabraniZadatak(izmenjeniZadatak, izabraniRed);
            JOptionPane.showConfirmDialog(this, "Zadatak je izmenjen.", konstante.Konstante.PORUKA_USPESNO, JOptionPane.DEFAULT_OPTION);
            dispose();
        }
    }//GEN-LAST:event_btnIzmeniZadatakActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzmeniZadatak;
    private javax.swing.JComboBox cmbStatusZadatka;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtDatumZavrsetka;
    private javax.swing.JTextField txtNaziv;
    private javax.swing.JTextArea txtOpis;
    // End of variables declaration//GEN-END:variables

    private void popuniStatuseZadatka() {
        cmbStatusZadatka.removeAllItems();
        ArrayList<StatusZadatka> listaSvihStatusa = kontroler.KontrolerKIZadatak.getInstance().vratiSveStatuseZadataka();
        if (listaSvihStatusa != null) {
            for (StatusZadatka status : listaSvihStatusa) {
                cmbStatusZadatka.addItem(status);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Sistem ne može statuse zadataka", konstante.Konstante.PORUKA_NEUSPESNO, JOptionPane.ERROR_MESSAGE);
            dispose();
        }
    }

    private boolean validirajUnos(Zadatak zadatak) {
        String nazivZadatka = txtNaziv.getText().trim();
        if (nazivZadatka.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Polje naziv ne sme biti prazno.", konstante.Konstante.PORUKA_NEUSPESNO, JOptionPane.ERROR_MESSAGE);
            return false;
        }

        String opisZadatka = txtOpis.getText().trim();
        if (opisZadatka.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Polje opis zadatka ne sme biti prazno.", konstante.Konstante.PORUKA_NEUSPESNO, JOptionPane.ERROR_MESSAGE);
            return false;
        }

        Date datumZavrsetka = null;
        SimpleDateFormat sdf = konstante.Konstante.SIMPLE_DATE_FORMAT;
        try {
            datumZavrsetka = sdf.parse(txtDatumZavrsetka.getText());
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this, konstante.Konstante.PORUKA_GRESKA_FORMAT_DATUMA, konstante.Konstante.PORUKA_NEUSPESNO, JOptionPane.ERROR_MESSAGE);
            return false;
        }

        StatusZadatka statusZadatka = (StatusZadatka) cmbStatusZadatka.getSelectedItem();
        if (statusZadatka == null) {
            JOptionPane.showMessageDialog(this, "Zadatak mora imati status iz polja status zadatka.", konstante.Konstante.PORUKA_NEUSPESNO, JOptionPane.ERROR_MESSAGE);
            return false;
        }

        zadatak.setNaziv(nazivZadatka);
        zadatak.setOpis(opisZadatka);
        zadatak.setOcekivaniZavrsetak(datumZavrsetka);
        zadatak.setStatusZadatka(statusZadatka);
        return true;
    }

    private void postaviVrednostiZadatka() {
        txtNaziv.setText(izabraniZadatak.getNaziv());
        txtOpis.setText(izabraniZadatak.getOpis());
        SimpleDateFormat sdf = Konstante.SIMPLE_DATE_FORMAT;
        txtDatumZavrsetka.setText(sdf.format(izabraniZadatak.getOcekivaniZavrsetak()));
        cmbStatusZadatka.setSelectedIndex(izabraniZadatak.getStatusZadatka().getStatusZadatkaId() - 1);
    }
}
